##Prep for Rbind & Rbind them
rownames(test)<-seq(nrow(train)+1,nrow(test)+nrow(train))
w.df<-rbind(train,test)
##Replace Column names
w.colnames<-colnames(w.df)
w.colnames <- gsub("\\()","",w.colnames)
w.colnames <- gsub("-std","StdDev",w.colnames)
w.colnames <- gsub("-mean","Mean",w.colnames)
w.colnames <- gsub("^(t)","Time.",w.colnames)
w.colnames <- gsub("^(f)","Freq.",w.colnames)
w.colnames <- gsub("Gravity","Gravity.",w.colnames)
w.colnames <- gsub("Body","Body.",w.colnames)
w.colnames <- gsub("Gyro","Gyro.",w.colnames)
w.colnames <- gsub("Acc","Acceleration.",w.colnames)
w.colnames <- gsub("Jerk","Jerk.",w.colnames)
w.colnames <- gsub("Mag","Magnitude.",w.colnames)
w.colnames <- gsub("Body\\.Body","Body",w.colnames)
w.colnames <- gsub("-X",".X",w.colnames)
w.colnames <- gsub("-Y",".Y",w.colnames)
w.colnames <- gsub("-Z",".Z",w.colnames)
colnames(w.df)<-w.colnames
str(w.df)
?tapply
?ddply
library("plyr")
?ddply
canames(w.df)
colnames(w.df)
#Create Training Dataset and select mean & standard deviation columns, add colums from other sets
train<-read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/train/X_train.txt",header=F)
w.colnames<-read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/features.txt")[,2]
colnames(train)<-w.colnames
train<-subset(train, select = grep("mean\\(\\)|std\\(\\)", names(train)))
train$set<-c("train")
train$ActivityID<-as.character(read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/train/y_train.txt",header=F))
train$SubjectID<-as.character(read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/train/subject_train.txt",header=F))
#Create Test Training Dataset, selecting mean & standard dev columns, adding in additional columns
test<-read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/test/X_test.txt",header=F)
colnames(test)<-w.colnames
test<-subset(test, select = grep("mean\\(\\)|std\\(\\)", names(test)))
test$set<-c("test")
test$ActivityID<-as.character(read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/test/y_test.txt",header=F))
test$SubjectID<-as.character(read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/test/subject_test.txt",header=F))
##Prep for Rbind & Rbind them
rownames(test)<-seq(nrow(train)+1,nrow(test)+nrow(train))
w.df<-rbind(train,test)
##Replace Column names
w.colnames<-colnames(w.df)
w.colnames <- gsub("\\()","",w.colnames)
w.colnames <- gsub("-std","StdDev",w.colnames)
w.colnames <- gsub("-mean","Mean",w.colnames)
w.colnames <- gsub("^(t)","Time.",w.colnames)
w.colnames <- gsub("^(f)","Freq.",w.colnames)
w.colnames <- gsub("Gravity","Gravity.",w.colnames)
w.colnames <- gsub("Body","Body.",w.colnames)
w.colnames <- gsub("Gyro","Gyro.",w.colnames)
w.colnames <- gsub("Acc","Acceleration.",w.colnames)
w.colnames <- gsub("Jerk","Jerk.",w.colnames)
w.colnames <- gsub("Mag","Magnitude.",w.colnames)
w.colnames <- gsub("Body\\.Body","Body",w.colnames)
w.colnames <- gsub("-X",".X",w.colnames)
w.colnames <- gsub("-Y",".Y",w.colnames)
w.colnames <- gsub("-Z",".Z",w.colnames)
colnames(w.df)<-w.colnames
#Average The Data Across Activity and Subject
colnames(w.df)
?colMeans
w.tidy<-ddply(w.df,.(ActivityID,SubjectID),colMeans)
w.tidy<-ddply(w.df,.(ActivityID,SubjectID),colMeans(w.df))
numrow(w.df)
nrow(w.df)
ncol(w.df)
#Create Training Dataset and select mean & standard deviation columns, add colums from other sets
train<-read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/train/X_train.txt",header=F)
w.colnames<-read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/features.txt")[,2]
colnames(train)<-w.colnames
train<-subset(train, select = grep("mean\\(\\)|std\\(\\)", names(train)))
train$ActivityID<-as.character(read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/train/y_train.txt",header=F))
train$SubjectID<-as.character(read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/train/subject_train.txt",header=F))
train$set<-c("train")
#Create Test Training Dataset, selecting mean & standard dev columns, adding in additional columns
test<-read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/test/X_test.txt",header=F)
colnames(test)<-w.colnames
test<-subset(test, select = grep("mean\\(\\)|std\\(\\)", names(test)))
test$ActivityID<-as.character(read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/test/y_test.txt",header=F))
test$SubjectID<-as.character(read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/test/subject_test.txt",header=F))
test$set<-c("test")
##Prep for Rbind & Rbind them
rownames(test)<-seq(nrow(train)+1,nrow(test)+nrow(train))
w.df<-rbind(train,test)
##Replace Column names
w.colnames<-colnames(w.df)
w.colnames <- gsub("\\()","",w.colnames)
w.colnames <- gsub("-std","StdDev",w.colnames)
w.colnames <- gsub("-mean","Mean",w.colnames)
w.colnames <- gsub("^(t)","Time.",w.colnames)
w.colnames <- gsub("^(f)","Freq.",w.colnames)
w.colnames <- gsub("Gravity","Gravity.",w.colnames)
w.colnames <- gsub("Body","Body.",w.colnames)
w.colnames <- gsub("Gyro","Gyro.",w.colnames)
w.colnames <- gsub("Acc","Acceleration.",w.colnames)
w.colnames <- gsub("Jerk","Jerk.",w.colnames)
w.colnames <- gsub("Mag","Magnitude.",w.colnames)
w.colnames <- gsub("Body\\.Body","Body",w.colnames)
w.colnames <- gsub("-X",".X",w.colnames)
w.colnames <- gsub("-Y",".Y",w.colnames)
w.colnames <- gsub("-Z",".Z",w.colnames)
colnames(w.df)<-w.colnames
w.tidy<-ddply(w.df[,-69],.(ActivityID,SubjectID),colMeans)
apply(w.df,class)
apply(w.df,FUN=class)
sapply(w.df,FUN=class)
ncol(w.df)
names(w.df[,-69])
w.tidy<-ddply(w.df[,-69],.(ActivityID,SubjectID),colMeans)
w.tidy<-ddply(w.df[,-69],.(ActivityID,SubjectID),colMeans(w.df[,-69]))
w.tidy<-ddply(w.df[,-69],.(ActivityID,SubjectID),colMeans(w.df[,-67]))
w.tidy<-ddply(w.df[,-69],.(ActivityID,SubjectID),colMeans(w.df[,-67:-69]))
w.tidy<-ddply(w.df[,-69],.(ActivityID,SubjectID),FUN=colMeans(w.df[,-67:-69]))
w.tidy
str(w.tidy)
str(w.tidy)
?ddply
str(train)
activity<- read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/train/y_train.txt",header=F)
subject<-  read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/train/subject_train.txt",header=F)
?cbind
cbind(train,activity,subject)
nrow(activity)
class(activity)
as.character(activity)
activity<-as.character(activity)
class(activity)
subject<-as.character(activity)
cbind(train,activity,subject)
activity<-as.character(activity,stringsAsFactors=TRUE)
class(activity)
subject<-as.character(subject,stringsAsFactors=TRUE)
w.df<-cbind(train,activity,subject)
str(w.df)
subject<-as.vector(subject)
activity<-as.vector(activity)
class(subject)
w.df<-cbind(train,activity,subject)
str(w.df)
activity2<-activity[,1]
activity<-as.numeric(activity)
activity
class(activity)
activity<- read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/train/y_train.txt",header=F)
class(activity)
activity<-as.vector(activity[,1])
class(activity)
w.df<-cbind(train,activity)
str(w.df)
ddply(w.df[,-69],.(ActivityID,SubjectID),colMeans)
#Create Training Dataset and select mean & standard deviation columns, add colums from other sets
train<-read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/train/X_train.txt",header=F)
w.colnames<-read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/features.txt")[,2]
colnames(train)<-w.colnames
train<-subset(train, select = grep("mean\\(\\)|std\\(\\)", names(train)))
activity<- read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/train/y_train.txt",header=F)
subject<-  read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/train/subject_train.txt",header=F)
ActivityID<-as.vector(activity[,1])
SubjectID<-as.vector(subject[,1])
cbind(train,activity,subject)
train$set<-c("train")
#Create Test Training Dataset, selecting mean & standard dev columns, adding in additional columns
test<-read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/test/X_test.txt",header=F)
colnames(test)<-w.colnames
test<-subset(test, select = grep("mean\\(\\)|std\\(\\)", names(test)))
activity<-read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/test/y_test.txt",header=F)
subject<-read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/test/subject_test.txt",header=F)
ActivityID<-as.vector(activity[,1])
SubjectID<-as.vector(subject[,1])
cbind(test,activity,subject)
test$set<-c("test")
##Prep for Rbind & Rbind them
rownames(test)<-seq(nrow(train)+1,nrow(test)+nrow(train))
w.df<-rbind(train,test)
##Replace Column names
w.colnames<-colnames(w.df)
w.colnames <- gsub("\\()","",w.colnames)
w.colnames <- gsub("-std","StdDev",w.colnames)
w.colnames <- gsub("-mean","Mean",w.colnames)
w.colnames <- gsub("^(t)","Time.",w.colnames)
w.colnames <- gsub("^(f)","Freq.",w.colnames)
w.colnames <- gsub("Gravity","Gravity.",w.colnames)
w.colnames <- gsub("Body","Body.",w.colnames)
w.colnames <- gsub("Gyro","Gyro.",w.colnames)
w.colnames <- gsub("Acc","Acceleration.",w.colnames)
w.colnames <- gsub("Jerk","Jerk.",w.colnames)
w.colnames <- gsub("Mag","Magnitude.",w.colnames)
w.colnames <- gsub("Body\\.Body","Body",w.colnames)
w.colnames <- gsub("-X",".X",w.colnames)
w.colnames <- gsub("-Y",".Y",w.colnames)
w.colnames <- gsub("-Z",".Z",w.colnames)
colnames(w.df)<-w.colnames
#Create Training Dataset and select mean & standard deviation columns, add colums from other sets
train<-read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/train/X_train.txt",header=F)
w.colnames<-read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/features.txt")[,2]
colnames(train)<-w.colnames
train<-subset(train, select = grep("mean\\(\\)|std\\(\\)", names(train)))
activity<- read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/train/y_train.txt",header=F)
subject<-  read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/train/subject_train.txt",header=F)
ActivityID<-as.vector(activity[,1])
SubjectID<-as.vector(subject[,1])
train.set<-cbind(train,activity,subject)
train.set$set<-c("train")
#Create Test Training Dataset, selecting mean & standard dev columns, adding in additional columns
test<-read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/test/X_test.txt",header=F)
colnames(test)<-w.colnames
test<-subset(test, select = grep("mean\\(\\)|std\\(\\)", names(test)))
activity<-read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/test/y_test.txt",header=F)
subject<-read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/test/subject_test.txt",header=F)
ActivityID<-as.vector(activity[,1])
SubjectID<-as.vector(subject[,1])
test.set<-cbind(test,activity,subject)
test.set$set<-c("test")
##Prep for Rbind & Rbind them
rownames(test)<-seq(nrow(train)+1,nrow(test)+nrow(train))
w.df<-rbind(train.set,test.set)
##Replace Column names
w.colnames<-colnames(w.df)
w.colnames <- gsub("\\()","",w.colnames)
w.colnames <- gsub("-std","StdDev",w.colnames)
w.colnames <- gsub("-mean","Mean",w.colnames)
w.colnames <- gsub("^(t)","Time.",w.colnames)
w.colnames <- gsub("^(f)","Freq.",w.colnames)
w.colnames <- gsub("Gravity","Gravity.",w.colnames)
w.colnames <- gsub("Body","Body.",w.colnames)
w.colnames <- gsub("Gyro","Gyro.",w.colnames)
w.colnames <- gsub("Acc","Acceleration.",w.colnames)
w.colnames <- gsub("Jerk","Jerk.",w.colnames)
w.colnames <- gsub("Mag","Magnitude.",w.colnames)
w.colnames <- gsub("Body\\.Body","Body",w.colnames)
w.colnames <- gsub("-X",".X",w.colnames)
w.colnames <- gsub("-Y",".Y",w.colnames)
w.colnames <- gsub("-Z",".Z",w.colnames)
colnames(w.df)<-w.colnames
w.tidy<-ddply(w.df[,-69],.(ActivityID,SubjectID),colMeans)
w.tidy
str(w.tidy)
str(w.df)
str(w.df[,-69])
str(w.df[,])
colnames(w.df)<-w.colnames
str(w.df[,])
?cbind
train<-read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/train/X_train.txt",header=F)
w.colnames<-read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/features.txt")[,2]
colnames(train)<-w.colnames
train<-subset(train, select = grep("mean\\(\\)|std\\(\\)", names(train)))
activity<- read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/train/y_train.txt",header=F)
subject<-  read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/train/subject_train.txt",header=F)
ActivityID<-as.vector(activity[,1])
SubjectID<-as.vector(subject[,1])
train.set<-cbind(train,ActivityID,SubjectID)
train.set$set<-c("train")
str(train.set)
#Create Test Training Dataset, selecting mean & standard dev columns, adding in additional columns
test<-read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/test/X_test.txt",header=F)
colnames(test)<-w.colnames
test<-subset(test, select = grep("mean\\(\\)|std\\(\\)", names(test)))
activity<-read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/test/y_test.txt",header=F)
subject<-read.table("/Users/triston/Desktop/Data Science Work/UCI HAR Dataset/test/subject_test.txt",header=F)
ActivityID<-as.vector(activity[,1])
SubjectID<-as.vector(subject[,1])
test.set<-cbind(test,ActivityID,SubjectID)
test.set$set<-c("test")
str(test.set)
rownames(test)<-seq(nrow(train)+1,nrow(test)+nrow(train))
w.df<-rbind(train.set,test.set)
##Replace Column names
w.colnames<-colnames(w.df)
w.colnames <- gsub("\\()","",w.colnames)
w.colnames <- gsub("-std","StdDev",w.colnames)
w.colnames <- gsub("-mean","Mean",w.colnames)
w.colnames <- gsub("^(t)","Time.",w.colnames)
w.colnames <- gsub("^(f)","Freq.",w.colnames)
w.colnames <- gsub("Gravity","Gravity.",w.colnames)
w.colnames <- gsub("Body","Body.",w.colnames)
w.colnames <- gsub("Gyro","Gyro.",w.colnames)
w.colnames <- gsub("Acc","Acceleration.",w.colnames)
w.colnames <- gsub("Jerk","Jerk.",w.colnames)
w.colnames <- gsub("Mag","Magnitude.",w.colnames)
w.colnames <- gsub("Body\\.Body","Body",w.colnames)
w.colnames <- gsub("-X",".X",w.colnames)
w.colnames <- gsub("-Y",".Y",w.colnames)
w.colnames <- gsub("-Z",".Z",w.colnames)
colnames(w.df)<-w.colnames
w.tidy<-ddply(w.df[,-69],.(ActivityID,SubjectID),colMeans)
str(w.tidy)
?write.table
write.table(w.tidy, file="WearablesTidyData", row.names=FALSE)
getwd()
write.table(w.tidy, file="../Desktop/WearablesTidyData", row.names=FALSE)
write.table(w.tidy, file="/Users/triston/Desktop/WearablesTidyData", row.names=FALSE)
write.table(w.tidy, file="/Users/triston/Desktop/WearablesTidyData.txt", row.names=FALSE)
library("grep")
library("plyr")
library(grep)
library(plyr)
?grep
?ddplr
?dplyr
?ddplyr
?ddply
colnames(w.tidy)
swirl()
library(swirl)
swirl()
cor(gpa_nor,gch_nor)
l_nor<-lm(gch_nor ~ gpa_nor)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
z<-x*w
mean(z)
z
mean(x+c(.18,.42,.42))
z<-x+c(.18,.42,.42)
y<-c(.18,.42,.42)
mean(x+y)
y<-c(0.18, -1.54, 0.42, 0.95,.18,.42,.42)
mean(y)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
plot(x,y)
lm(y~x)
𝚍𝚊𝚝𝚊(𝚖𝚝𝚌𝚊𝚛𝚜)
data("mtcars")
str(mtcars)
lm(mpg,wt,data=mtcars)
lm(mpg ~ wt,data=mtcars)
x<-c(8.58, 10.46, 9.01, 9.64, 8.86)
mean(x)
sd(x)
(x-mean(x))/sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y ~ x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(x ~ y)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y ~ x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y ~ x)
mean( c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42))
swirl()
fit<-lm(child ~ parent, galton)
sqrt(sum(fit$residuals^2))
sqrt(sum(fit$residuals^2)) / (n - 2)
sqrt(sum(fit$residuals^2) / (n - 2))
summar(fit)$sigma
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu<-mean(galton$child)
sTot<- (galton$child-mu)^2
sTot<- sum((galton$child-mu)^2)
sRes<-deviance(galton$child)
sRes<-deviance(fit)
1- (sRes/sTot)
1-sRes/sTot
summary(fit)$r
summary(fit)$r.squared
cor(child,parent)
cor(galton$child,galton$parent)
cor(galton$child,galton$parent)^2
ones<-rep(1,nrow(galton))
lm(child ~ ones + parent -1, galton)
lm(child ~ parent, galton)
lm(child~1, galton)
view(trees)
View(trees)
fit<-lim(volume ~ Girth + Height + Constant -1, trees)
fit<-lm(volume ~ Girth + Height + Constant -1, trees)
fit<-lm(Volume ~ Girth + Height + Constant -1, trees)
trees2<-eliminate("Girth",trees)
View(trees2)
fit2<-lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit,fit2), coef)
all<-lm(Fertility ~ .(Agriculture, Examination, Education, Catholic, Infant.Mortality), swiss)
all<-lm(Fertility ~ Agriculture + Examination + Education + Catholic + Infant.Mortality, swiss)
summary(all)
lm(Fertility ~ Agriculture, swiss)
summary(lm(Fertility ~ Agriculture, swiss))
cor(swiss$Examination, swiss$Education)
cor(Aggriculture, Education)
cor(swiss$Aggriculture, swiss$Education)
cor(swiss$Agriculture, swiss$Education)
makelms()
ec<-sum(swiss$Examination, swiss$Catholic)
ec<-swiss$Examination + swiss$Catholic
efit(Fertility ~ Agriculture + Catholic + Education + Examination +Infant.Mortality+ec, swiss )
efit<-lm(Fertility ~ Agriculture + Catholic + Education + Examination +Infant.Mortality+ec, swiss )
all-efit
all$coefficients-efit$coefficients
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
summary(lm(y~x))
model<-lm(y~x)
sd(model$residuals)
?sd
sqrt( sum(model$residuals^2) / nrows(model$residuals)-2 )
sqrt( sum(model$residuals^2) / nrow(model$residuals)-2 )
sqrt( sum(model$residuals^2) / 7 )
car.model<- lm(mpg ~ weight, mtcars)
head(mtcars)
car.model<- lm(mpg ~ wt, mtcars)
summar(car.model)
summary(car.model)
car.model$coefficients[2,1] + c(1,-1) * car.model$coefficients[2,2]
car.model$Coefficients[2,1] + c(1,-1) * car.model$Coefficients[2,2]
car.model$Coefficients[2,1]
car.model$Coefficients:[2,1]
str(car.fit)
str(car.model)
car.model$coefficients:[2,1]
car.model$coefficients[2,1]
car.model$coefficients
car.model$coefficients[1,2]
car.model$coefficients[2]
car.model$Coefficients[2] + c(1,-1) * 0.5591
c(1,-1) * 0.5591
(c(1,-1) * 0.5591)*1.965
(c(1,-1) * 0.5591)*1.965+-5.3445
?mtcars
?predict
?fit
predict(car.model,3000)
predict(car.model,newdata=data.frame(x=3000),interval="prediction",df=car.model$df)
predict(car.model,interval="prediction",df=car.model$df)
predict(car.model,newdata=data.frame(wt=3000),interval="prediction",df=car.model$df)
str(mtcar)
str(mtcars)
predict(car.model,newdata=data.frame(wt=3),interval="prediction",df=car.model$df)
predict(car.model,newdata=data.frame(wt=2),interval="prediction",df=car.model$df)
car.model$coefficients[2]*2
(c(1,-1) * 0.5591)*1.965
((c(1,-1) * 0.5591)*1.965)*2
predict(car.model,newdata=data.frame(wt=2),interval="prediction",df=car.model$df)
car.model$coefficients
((c(1,-1) * 0.5591)*1.965) * -5.344472
-5.344472 * 2 + ((c(1,-1) * 0.5591)*1.965)
lm(mpg ~ 1, mtcars)
summary(lm(mpg~1),mtcars)
summary(lm(mpg~1,mtcars))
summary(lm(mpg~wt),mtcars)
summary(lm(mpg~wt,mtcars))
avg(mtcars$wt)
mean(mtcars$wt)
-5.344472 * mean(mtcars$wt) + ((c(1,-1) * 0.5591)*1.965)
(-5.344472 * mean(mtcars$wt) + ((c(1,-1) * 0.5591)*1.965))+37.2851
-5.344 / (2/3)
-5.344 / (3/2)
-5.344 / (2)
(-5.344472/2 + ((c(1,-1) * 0.5591)*1.965))
(-5.344472/2 + ((c(1,-1) * 0.5591/2)*1.965))
(-5.344472/2 + ((c(1,-1) * 0.5591)*1.965))
(-5.344472*2 + ((c(1,-1) * 0.5591)*1.965))
(-5.344472*3 + ((c(1,-1) * 0.5591)*1.965))
(-5.344472*3 + ((c(1,-1) * 0.5591)*1.965))+37.2851
pwd
wd()
?cd
getwd()
setwd("/Users/triston/desktop/Data Science Work/RepData_PeerAssessment1/")
getwd()
read.csv(activity.csv)
read.csv("activity.csv")
activity<-read.csv("activity.csv")
?table
table(activity$steps,activity$date)
table(activity$date,activity$interval)
table(activity$date)
View(activity)
apply(activity$steps,mean)
apply(activity,mean,activity$steps,activity$date)
?aggregate
aggregate(steps ~ date, data=activity, FUN=mean)
aggregate(steps, data=activity, FUN=mean)
aggregate(steps, data=activity, FUN=sum)
aggregate(steps ~ day, data=activity, FUN=sum)
aggregate(steps ~ date, data=activity, FUN=sum)
activity.day.steps<-aggregate(steps ~ date, data=activity, FUN=sum)
hist(activity.day.steps)
hist(activity.day.steps$steps)
activity.day.steps<-aggregate(steps ~ date, data=activity, FUN=sum")
hist(activity.day.steps$steps,, main = "Histogram of the frequency of step levels)
activity.day.steps<-aggregate(steps ~ date, data=activity, FUN=sum)
hist(activity.day.steps$steps,, main = "Histogram of the frequency of step levels")
mean(activity.day.steps)
mean(activity.day.steps$steps)
median(activity.day.steps$steps)
activity.interval.steps<-aggregate(steps ~ interval, data=activity, mean)
activity.interval.steps
plot(activity.interval.steps$interval, activity.interval.steps$steps,type="l")
plot(activity.interval.steps$interval, activity.interval.steps$steps,type="l", main = "Average number os steps by 5-minute interval")
max(activity.interval.steps)
max(activity.interval.steps$steps)
which.max(activity.interval.steps$steps)
activity[which.max(activity.interval.steps$steps),1]
activity[which.max(activity.interval.steps$steps),2]
activity[which.max(activity.interval.steps$steps),]
activity[[which.max(activity.interval.steps$steps),]]
activity.interval.steps[which.max(activity.interval.steps$steps),2]
activity.interval.steps[which.max(activity.interval.steps$steps),1]
